<?php

if (isset($_SESSION['toolProvider']->user)) {
	$_SESSION['canvasInstanceUrl'] = 'https://' . $_SESSION['toolProvider']->user->getResourceLink()->settings['custom_canvas_api_domain'];
}

if (isset($_SESSION['apiUrl']) && isset($_SESSION['apiToken'])) {
	$api = new CanvasPest($_SESSION['apiUrl'], $_SESSION['apiToken']);
}

/* order of shell arguments for sync */
define('INDEX_COMMAND', 0);
define('INDEX_SCHEDULE', 1);
define('INDEX_WEB_PATH', 2);

/* argument values for sync */
define('SCHEDULE_ONCE', 'once');
define('SCHEDULE_WEEKLY', 'weekly');
define('SCHEDULE_DAILY', 'daily');
define('SCHEDULE_HOURLY', 'hourly');
define('SCHEDULE_CUSTOM', 'custom');

define('LOCAL_TIMEZONE', 'US/Eastern'); // TODO: Can we detect the timezone for the Canvas instance and use it?
define('SEPARATOR', '_'); // used when concatenating information in the cache database
define('CANVAS_TIMESTAMP_FORMAT', 'Y-m-d\TH:iP');
define('SYNC_TIMESTAMP_FORMAT', 'Y-m-d\TH:iP'); // same as CANVAS_TIMESTAMP_FORMAT, FWIW

/* cache database tables */

/* calendars
	id				hash of ICS and Canvas pairing, generated by getPairingHash()
	ics_url			URL of ICS feed
	canvas_url		canonical URL for Canvas object
	synced			sync identification, generated by getSyncTimestamp()
	modified		timestamp of last modificiation of the record
*/

/* events
	id					auto-incremented cache record id
	calendar			pair hash for cached calendar, generated by getPairingHash()
	calendar_event[id]	Canvas ID of calendar event
	event_hash			hash of cached event data from previous sync
	synced				sync identification, generated by getSyncTimestamp()
	modified			timestamp of last modification of the record
*/

/* schedules
	id			auto-incremented cache record id
	calendar	pair hash for cached calendar, generated by getPairingHash()
	crontab		crontab data for scheduled synchronization
	synced		sync identification, generated by getSyncTimestamp()
	modified	timestamp of last modification of the record
*/

/**
 * Generate a unique ID to identify this particular pairing of ICS feed and
 * Canvas calendar
 **/
function getPairingHash($icsUrl, $canvasContext) {
	global $metadata;
	return md5($icsUrl . $canvasContext . $metadata['CANVAS_INSTANCE_URL']);
}

/**
 * Generate a hash of this version of an event to cache in the database
 **/
function getEventHash($event) {
	return md5(serialize($event));
}

/**
 * Generate a unique identifier for this synchronization pass
 **/
$SYNC_TIMESTAMP = null;
function getSyncTimestamp() {
	global $SYNC_TIMESTAMP;
	if ($SYNC_TIMESTAMP) {
		return $SYNC_TIMESTAMP;
	} else {
		$timestamp = new DateTime();
		$SYNC_TIMESTAMP = $timestamp->format(SYNC_TIMESTAMP_FORMAT) . SEPARATOR . md5($_SERVER['REMOTE_ADDR'] . time());
		return $SYNC_TIMESTAMP;
	}
}

?>